/**
 * Returns a copy of the specified string with all Unicode null characters removed.
 */
export function filterNullChars(str: string): string {
  // in HTML generated by Apple Notes I found some null chars (among other things in the tag names)
  return str !== null && str !== undefined
    ? str.replace(new RegExp("\u0000", "g"), "") // eslint-disable-line no-control-regex
    : ""
}

const entityMap = new Map<RegExp, string>([
  [/&quot;/g, '"'],
  [/&lt;/g, "<"],
  [/&gt;/g, ">"],
  [/&nbsp;/g, "\u00A0"],
  [/&copy;/g, "\u00A9 "],
  [/&reg;/g, "\u00AE"]
])
/**
 * Decodes HTML Character entities into their corresponding character.
 * https://www.w3.org/TR/html4/sgml/entities.html
 */
export function decodeHtmlEntities(input: string): string {
  if (!input) return input
  // TODO: lame only a couple obvious ones: https://www.w3.org/TR/html4/sgml/entities.html
  for (const kv of entityMap) {
    input = input.replace(kv[0], kv[1])
  }
  return input
}
/**
 * Returns true if the iterable is empty.
 */
export function isEmpty<T>(collection: Iterable<T>): boolean {
  // Iterable: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol
  if (!collection || !Reflect.has(collection, Symbol.iterator)) return true
  const iterator: Iterator<T> = collection[Symbol.iterator]()
  // Iterator: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol
  if (!iterator) return true
  const result = iterator.next()
  return !result || result.done
}
